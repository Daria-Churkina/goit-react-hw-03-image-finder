{"version":3,"sources":["Components/api.jsx","Components/galleryItem.jsx","Components/gallery.jsx","Components/modal.jsx","Components/searchForm.jsx","Components/button.jsx","Components/imageInfo.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","apiKey","searchQuery","page","then","response","data","hits","GalleryItem","smallImage","largeImage","onClick","className","src","alt","Gallery","images","map","image","index","webformatURL","largeImageURL","Modal","closeModal","e","code","props","onClose","clickOverlay","target","nodeName","window","addEventListener","this","removeEventListener","Component","SearchForm","state","inputValue","handleChange","setState","value","handleSubmit","preventDefault","trim","onSubmit","toast","warn","position","POSITION","TOP_LEFT","type","onChange","autoComplete","autoFocus","placeholder","Button","div","ImageInfo","results","loading","firstFetch","modalImage","status","handleSearchSubmit","query","fetchImages","api","prevState","scrollTo","bottom","document","documentElement","scrollHeight","behavior","catch","error","console","log","finally","openModal","imageUrl","prevProps","color","height","width","length","App","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc309ac5.chunk.js","sourcesContent":["import axios from 'axios';\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\nconst apiKey = '19476609-7641264ac12d7db32f779afed';\r\n\r\nconst fetchImagesWithQuery = (searchQuery, page = 1) => {\r\n  return axios(\r\n    `/?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => response.data.hits);\r\n};\r\n\r\nexport default { fetchImagesWithQuery };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GalleryItem = ({ smallImage, largeImage, onClick }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        onClick={() => onClick(largeImage)}\r\n        src={smallImage}\r\n        alt=\"gallaryImg\"\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nGalleryItem.propTypes = {\r\n  smallImage: PropTypes.string.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default GalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GalleryItem from './galleryItem';\r\n\r\nconst Gallery = ({ images, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image, index) => (\r\n        <GalleryItem\r\n          key={index}\r\n          smallImage={image.webformatURL}\r\n          largeImage={image.largeImageURL}\r\n          onClick={onClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.closeModal);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.closeModal);\r\n  }\r\n\r\n  closeModal = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  clickOverlay = e => {\r\n    if (e.target.nodeName !== 'IMG') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImage } = this.props;\r\n    return (\r\n      <div onClick={this.clickOverlay} className=\"Overlay\">\r\n        <div className=\"Modal\">\r\n          <img src={largeImage} alt=\"modalImg\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  largeImage: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default class SearchForm extends Component {\r\n  state = {\r\n    inputValue: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.inputValue.trim() === '') {\r\n      toast.warn('Enter what you want to find', {\r\n        position: toast.POSITION.TOP_LEFT,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={this.state.inputValue}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <div div className=\" LoadMore\">\r\n      <button type=\"button\" onClick={onClick} className=\"Button\">\r\n        Load More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { Component } from 'react';\r\nimport api from './api';\r\nimport Gallery from './gallery';\r\nimport Modal from './modal';\r\nimport SearchForm from './searchForm';\r\nimport Button from './button';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nexport default class ImageInfo extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n    page: 1,\r\n    results: [],\r\n    loading: false,\r\n    firstFetch: true,\r\n    modalImage: null,\r\n    status: 'idle',\r\n  };\r\n\r\n  handleSearchSubmit = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      results: [],\r\n      page: 1,\r\n      firstFetch: true,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevState.searchQuery;\r\n    const nextQuery = this.state.searchQuery;\r\n\r\n    prevQuery !== nextQuery && this.fetchImages();\r\n  }\r\n\r\n  fetchImages = () => {\r\n    const { searchQuery, page } = this.state;\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    api\r\n      .fetchImagesWithQuery(searchQuery, page)\r\n      .then(images => {\r\n        this.setState(prevState => ({\r\n          results: [...prevState.results, ...images],\r\n          page: prevState.page + 1,\r\n        }));\r\n        if (!this.state.firstFetch) {\r\n          window.scrollTo({\r\n            bottom: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n      .finally(() => {\r\n        this.setState({\r\n          loading: false,\r\n          firstFetch: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  openModal = imageUrl => {\r\n    this.setState({ modalImage: imageUrl });\r\n  };\r\n\r\n  closeModal = e => {\r\n    this.setState({ modalImage: null });\r\n  };\r\n\r\n  render() {\r\n    const { loading, results, modalImage } = this.state;\r\n    return (\r\n      <>\r\n        <SearchForm onSubmit={this.handleSearchSubmit} />\r\n        <Gallery images={results} onClick={this.openModal} />\r\n        {modalImage && (\r\n          <Modal largeImage={modalImage} onClose={this.closeModal} />\r\n        )}\r\n        <div className=\"Loader\">\r\n          {loading && (\r\n            <Loader type=\"Oval\" color=\"#00BFFF\" height={100} width={100} />\r\n          )}\r\n        </div>\r\n        {results.length > 0 && !loading && (\r\n          <Button onClick={this.fetchImages} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport ImageInfo from './Components/imageInfo';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n  };\r\n  \r\n  componentDidMount() {}\r\n\r\n  handleSearchSubmit = searchQuery => {\r\n    this.setState({ searchQuery })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ImageInfo searchQuery={this.state.searchQuery} />\r\n        <ToastContainer autoClose={4000} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}